[gd_scene load_steps=10 format=2]

[ext_resource path="res://assets/pixel.png" type="Texture" id=3]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform sampler2D NOISE_PATTERN1;
uniform sampler2D NOISE_PATTERN2;
uniform vec2 scroll1 = vec2(1.0, 0.4);
uniform vec2 scroll2 = vec2(0.2, 1.4);
uniform float speed : hint_range(0, 1) = 0.05;
uniform float xStretch = 1.0;
uniform float yStretch = 0.1;

uniform float laserSize : hint_range(0, 1) = 0.5;
uniform float wobbliness : hint_range(0, 1) = 0.1;

uniform vec4 color1 : hint_color;
uniform vec4 color2 : hint_color;
uniform float colorMixFactor : hint_range(0, 10) = 1;
uniform float glowFactor = 2.5;

uniform sampler2D TRANSPARENCY_VARIATION;
uniform float minAlpha = 0.3;

void fragment() {
	vec2 stretched_UV = UV;
	stretched_UV.x *= xStretch;
	stretched_UV.y *= yStretch;
	
	float intensity1 = textureLod(NOISE_PATTERN1, stretched_UV + TIME * scroll1 * speed, 0.0).r;
	float intensity2 = textureLod(NOISE_PATTERN2, stretched_UV + TIME * scroll2 * speed, 0.0).r;
	float intensity = intensity1 * intensity2;
	
	float centrality = (1.0 - abs(UV.y - 0.5)) * 0.5;
	
	if (wobbliness * intensity + (1.0 - wobbliness) * centrality > 1.0 - laserSize)
	{
		intensity *= centrality;
		COLOR = mix(color1, color2, clamp(intensity * colorMixFactor, 0.0, 1.0)) * glowFactor;
		
		float alpha = textureLod(TRANSPARENCY_VARIATION, stretched_UV + TIME * scroll1 * speed, 0.0).r;
		COLOR.a = minAlpha + alpha * (1.0 - minAlpha);
	}
}"

[sub_resource type="OpenSimplexNoise" id=2]
seed = 10
octaves = 7

[sub_resource type="NoiseTexture" id=3]
seamless = true
noise = SubResource( 2 )

[sub_resource type="OpenSimplexNoise" id=4]
seed = 3

[sub_resource type="NoiseTexture" id=5]
seamless = true
noise = SubResource( 4 )

[sub_resource type="OpenSimplexNoise" id=6]

[sub_resource type="NoiseTexture" id=7]
seamless = true
noise = SubResource( 6 )

[sub_resource type="ShaderMaterial" id=8]
shader = SubResource( 1 )
shader_param/scroll1 = Vector2( 1, 0.4 )
shader_param/scroll2 = Vector2( 0.2, 1.4 )
shader_param/speed = 0.585
shader_param/xStretch = 0.3
shader_param/yStretch = 0.1
shader_param/laserSize = 0.577
shader_param/wobbliness = 0.2
shader_param/color1 = Color( 1, 0.74902, 0.00392157, 1 )
shader_param/color2 = Color( 1, 0, 0, 1 )
shader_param/colorMixFactor = 4.256
shader_param/glowFactor = 2.0
shader_param/minAlpha = 0.3
shader_param/NOISE_PATTERN1 = SubResource( 3 )
shader_param/NOISE_PATTERN2 = SubResource( 5 )
shader_param/TRANSPARENCY_VARIATION = SubResource( 7 )

[node name="laser" type="Node2D"]

[node name="beam" type="Line2D" parent="."]
material = SubResource( 8 )
position = Vector2( 18.3127, 14.1665 )
scale = Vector2( 2.19923, 0.292305 )
points = PoolVector2Array( 21.972, 23.9743, 98.1591, 24.6758 )
width = 420.0
default_color = Color( 0.376471, 0.478431, 1, 0 )
texture = ExtResource( 3 )
texture_mode = 2
begin_cap_mode = 2
end_cap_mode = 2
